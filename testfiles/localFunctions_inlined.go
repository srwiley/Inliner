// This file is generated by inliner. DO NOT EDIT.
// Source file: testfiles/localFunctions.go
package main

import ()

var sumG = 0.0

func inlineTestG_(x float64, y float64) {
	sumG /= x + y
	sumG *= x * y
}

func compoundInline() float64 {
	sum := 0.0
	 /* inlineTest_ := func(x float64, y float64) {
		sum += x * y
		sum += x - y
	} /* inlined func */ 
	 /* inlineTest2_ := func(x float64, y float64) {
		sum += x + y
		sum += x / y
		sum += (x/3.2+y) * (y)
		sum += (x/3.2+y) - (y) // inlined inlineTest_(x/3.2+y, y)
	} /* inlined func */ 
	 /* inlineTest3_ := func(x float64, y float64) {
		sum += x/2 + y/3
		sum += (x+9.2) + (y)
		sum += (x+9.2) / (y)
		sum += ((x+9.2)/3.2+(y)) * ((y))
		sum += ((x+9.2)/3.2+(y)) - ((y)) // inlined inlineTest_((x+9.2)/3.2+(y), (y)) // inlined inlineTest2_(x+9.2, y)
	} /* inlined func */ 
	sum += (4.3+3.2) + (2.0)
		sum += (4.3+3.2) / (2.0)
		sum += ((4.3+3.2)/3.2+(2.0)) * ((2.0))
		sum += ((4.3+3.2)/3.2+(2.0)) - ((2.0)) // inlined inlineTest_((4.3+3.2)/3.2+(2.0), (2.0)) // inlined inlineTest2_(4.3+3.2, 2.0)
	sum += (4.3)/2 + (2.4)/3
		sum += ((4.3)+9.2) + ((2.4))
		sum += ((4.3)+9.2) / ((2.4))
		sum += (((4.3)+9.2)/3.2+((2.4))) * (((2.4)))
		sum += (((4.3)+9.2)/3.2+((2.4))) - (((2.4))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((4.3)+9.2, (2.4)) // inlined inlineTest3_(4.3, 2.4)
	sum += (5.3-38.2)/2 + (2.74-9.4)/3
		sum += ((5.3-38.2)+9.2) + ((2.74-9.4))
		sum += ((5.3-38.2)+9.2) / ((2.74-9.4))
		sum += (((5.3-38.2)+9.2)/3.2+((2.74-9.4))) * (((2.74-9.4)))
		sum += (((5.3-38.2)+9.2)/3.2+((2.74-9.4))) - (((2.74-9.4))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((5.3-38.2)+9.2, (2.74-9.4)) // inlined inlineTest3_(5.3-38.2, 2.74-9.4)
	sum += (4.6)/2 + (7.4)/3
		sum += ((4.6)+9.2) + ((7.4))
		sum += ((4.6)+9.2) / ((7.4))
		sum += (((4.6)+9.2)/3.2+((7.4))) * (((7.4)))
		sum += (((4.6)+9.2)/3.2+((7.4))) - (((7.4))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((4.6)+9.2, (7.4)) // inlined inlineTest3_(4.6, 7.4)
	sum += (30.2)/2 + (92.4)/3
		sum += ((30.2)+9.2) + ((92.4))
		sum += ((30.2)+9.2) / ((92.4))
		sum += (((30.2)+9.2)/3.2+((92.4))) * (((92.4)))
		sum += (((30.2)+9.2)/3.2+((92.4))) - (((92.4))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((30.2)+9.2, (92.4)) // inlined inlineTest3_(30.2, 92.4)
	sumG /= (30.2) + (92.4)
	sumG *= (30.2) * (92.4) // inlined inlineTestG_(30.2, 92.4)
	return sum
}

func compoundNotInlined() float64 {
	sum := 0.0
	inlineTest := func(x float64, y float64) {
		sum += x * y
		sum += x - y
	}
	inlineTest2 := func(x float64, y float64) {
		sum += x + y
		sum += x / y
		inlineTest(x/3.2+y, y)
	}
	inlineTest3 := func(x float64, y float64) {
		sum += x/2 + y/3
		inlineTest2(x+9.2, y)
	}
	inlineTest2(4.3+3.2, 2.0)
	inlineTest3(4.3, 2.4)
	inlineTest3(5.3-38.2, 2.74-9.4)
	inlineTest3(4.6, 7.4)
	inlineTest3(30.2, 92.4)
	return sum
}

func compoundLoopedNotInlined() float64 {
	sum := 0.0
	inlineTest := func(x float64, y float64) {
		sum += x * y
		sum += x - y
	}
	inlineTest2 := func(x float64, y float64) {
		sum += x + y
		sum += x / y
		inlineTest(x/3.2+y, y)
	}
	inlineTest3 := func(x float64, y float64) {
		sum += x/2 + y/3
		inlineTest2(x+9.2, y)
	}
	for i := 0; i < 50; i++ {
		if i%2 == 0 {
			inlineTest3(45.2, 4.2-float64(i))
		}
	}
	return sum
}

func compoundLoopedInline() float64 {
	sum := 0.0
	 /* inlineTest_ := func(x float64, y float64) {
		sum += x * y
		sum += x - y
	} /* inlined func */ 
	 /* inlineTest2_ := func(x float64, y float64) {
		sum += x + y
		sum += x / y
		sum += (x/3.2+y) * (y)
		sum += (x/3.2+y) - (y) // inlined inlineTest_(x/3.2+y, y)
	} /* inlined func */ 
	 /* inlineTest3_ := func(x float64, y float64) {
		sum += x/2 + y/3
		sum += (x+9.2) + (y)
		sum += (x+9.2) / (y)
		sum += ((x+9.2)/3.2+(y)) * ((y))
		sum += ((x+9.2)/3.2+(y)) - ((y)) // inlined inlineTest_((x+9.2)/3.2+(y), (y)) // inlined inlineTest2_(x+9.2, y)
	} /* inlined func */ 
	for i := 0; i < 50; i++ {
		if i%2 == 0 {
			sum += (45.2)/2 + (4.2-float64(i))/3
		sum += ((45.2)+9.2) + ((4.2-float64(i)))
		sum += ((45.2)+9.2) / ((4.2-float64(i)))
		sum += (((45.2)+9.2)/3.2+((4.2-float64(i)))) * (((4.2-float64(i))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64(i)))) - (((4.2-float64(i)))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i))) // inlined inlineTest3_(45.2, 4.2-float64(i))
		}
	}
	return sum
}

func compoundLoopedInlineUnwound() float64 {
	sum := 0.0
	 /* inlineTest_ := func(x float64, y float64) {
		sum += x * y
		sum += x - y
	} /* inlined func */ 
	 /* inlineTest2_ := func(x float64, y float64) {
		sum += x + y
		sum += x / y
		sum += (x/3.2+y) * (y)
		sum += (x/3.2+y) - (y) // inlined inlineTest_(x/3.2+y, y)
	} /* inlined func */ 
	 /* inlineTest3_ := func(x float64, y float64) {
		sum += x/2 + y/3
		sum += (x+9.2) + (y)
		sum += (x+9.2) / (y)
		sum += ((x+9.2)/3.2+(y)) * ((y))
		sum += ((x+9.2)/3.2+(y)) - ((y)) // inlined inlineTest_((x+9.2)/3.2+(y), (y)) // inlined inlineTest2_(x+9.2, y)
	} /* inlined func */ 
	 /* for i_ := 0; i_ < 50; i_++ { /* unwound */  // Ensure subsitutions work in sub-blocks
		if (0)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((0)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((0))))
		sum += ((45.2)+9.2) / ((4.2-float64((0))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((0))))) * (((4.2-float64((0)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((0))))) - (((4.2-float64((0))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (1)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((1)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((1))))
		sum += ((45.2)+9.2) / ((4.2-float64((1))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((1))))) * (((4.2-float64((1)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((1))))) - (((4.2-float64((1))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (2)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((2)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((2))))
		sum += ((45.2)+9.2) / ((4.2-float64((2))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((2))))) * (((4.2-float64((2)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((2))))) - (((4.2-float64((2))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (3)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((3)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((3))))
		sum += ((45.2)+9.2) / ((4.2-float64((3))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((3))))) * (((4.2-float64((3)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((3))))) - (((4.2-float64((3))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (4)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((4)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((4))))
		sum += ((45.2)+9.2) / ((4.2-float64((4))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((4))))) * (((4.2-float64((4)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((4))))) - (((4.2-float64((4))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (5)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((5)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((5))))
		sum += ((45.2)+9.2) / ((4.2-float64((5))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((5))))) * (((4.2-float64((5)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((5))))) - (((4.2-float64((5))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (6)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((6)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((6))))
		sum += ((45.2)+9.2) / ((4.2-float64((6))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((6))))) * (((4.2-float64((6)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((6))))) - (((4.2-float64((6))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (7)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((7)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((7))))
		sum += ((45.2)+9.2) / ((4.2-float64((7))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((7))))) * (((4.2-float64((7)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((7))))) - (((4.2-float64((7))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (8)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((8)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((8))))
		sum += ((45.2)+9.2) / ((4.2-float64((8))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((8))))) * (((4.2-float64((8)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((8))))) - (((4.2-float64((8))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (9)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((9)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((9))))
		sum += ((45.2)+9.2) / ((4.2-float64((9))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((9))))) * (((4.2-float64((9)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((9))))) - (((4.2-float64((9))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (10)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((10)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((10))))
		sum += ((45.2)+9.2) / ((4.2-float64((10))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((10))))) * (((4.2-float64((10)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((10))))) - (((4.2-float64((10))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (11)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((11)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((11))))
		sum += ((45.2)+9.2) / ((4.2-float64((11))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((11))))) * (((4.2-float64((11)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((11))))) - (((4.2-float64((11))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (12)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((12)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((12))))
		sum += ((45.2)+9.2) / ((4.2-float64((12))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((12))))) * (((4.2-float64((12)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((12))))) - (((4.2-float64((12))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (13)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((13)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((13))))
		sum += ((45.2)+9.2) / ((4.2-float64((13))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((13))))) * (((4.2-float64((13)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((13))))) - (((4.2-float64((13))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (14)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((14)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((14))))
		sum += ((45.2)+9.2) / ((4.2-float64((14))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((14))))) * (((4.2-float64((14)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((14))))) - (((4.2-float64((14))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (15)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((15)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((15))))
		sum += ((45.2)+9.2) / ((4.2-float64((15))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((15))))) * (((4.2-float64((15)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((15))))) - (((4.2-float64((15))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (16)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((16)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((16))))
		sum += ((45.2)+9.2) / ((4.2-float64((16))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((16))))) * (((4.2-float64((16)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((16))))) - (((4.2-float64((16))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (17)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((17)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((17))))
		sum += ((45.2)+9.2) / ((4.2-float64((17))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((17))))) * (((4.2-float64((17)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((17))))) - (((4.2-float64((17))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (18)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((18)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((18))))
		sum += ((45.2)+9.2) / ((4.2-float64((18))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((18))))) * (((4.2-float64((18)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((18))))) - (((4.2-float64((18))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (19)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((19)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((19))))
		sum += ((45.2)+9.2) / ((4.2-float64((19))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((19))))) * (((4.2-float64((19)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((19))))) - (((4.2-float64((19))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (20)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((20)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((20))))
		sum += ((45.2)+9.2) / ((4.2-float64((20))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((20))))) * (((4.2-float64((20)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((20))))) - (((4.2-float64((20))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (21)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((21)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((21))))
		sum += ((45.2)+9.2) / ((4.2-float64((21))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((21))))) * (((4.2-float64((21)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((21))))) - (((4.2-float64((21))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (22)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((22)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((22))))
		sum += ((45.2)+9.2) / ((4.2-float64((22))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((22))))) * (((4.2-float64((22)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((22))))) - (((4.2-float64((22))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (23)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((23)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((23))))
		sum += ((45.2)+9.2) / ((4.2-float64((23))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((23))))) * (((4.2-float64((23)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((23))))) - (((4.2-float64((23))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (24)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((24)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((24))))
		sum += ((45.2)+9.2) / ((4.2-float64((24))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((24))))) * (((4.2-float64((24)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((24))))) - (((4.2-float64((24))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (25)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((25)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((25))))
		sum += ((45.2)+9.2) / ((4.2-float64((25))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((25))))) * (((4.2-float64((25)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((25))))) - (((4.2-float64((25))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (26)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((26)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((26))))
		sum += ((45.2)+9.2) / ((4.2-float64((26))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((26))))) * (((4.2-float64((26)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((26))))) - (((4.2-float64((26))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (27)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((27)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((27))))
		sum += ((45.2)+9.2) / ((4.2-float64((27))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((27))))) * (((4.2-float64((27)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((27))))) - (((4.2-float64((27))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (28)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((28)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((28))))
		sum += ((45.2)+9.2) / ((4.2-float64((28))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((28))))) * (((4.2-float64((28)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((28))))) - (((4.2-float64((28))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (29)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((29)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((29))))
		sum += ((45.2)+9.2) / ((4.2-float64((29))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((29))))) * (((4.2-float64((29)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((29))))) - (((4.2-float64((29))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (30)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((30)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((30))))
		sum += ((45.2)+9.2) / ((4.2-float64((30))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((30))))) * (((4.2-float64((30)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((30))))) - (((4.2-float64((30))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (31)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((31)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((31))))
		sum += ((45.2)+9.2) / ((4.2-float64((31))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((31))))) * (((4.2-float64((31)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((31))))) - (((4.2-float64((31))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (32)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((32)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((32))))
		sum += ((45.2)+9.2) / ((4.2-float64((32))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((32))))) * (((4.2-float64((32)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((32))))) - (((4.2-float64((32))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (33)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((33)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((33))))
		sum += ((45.2)+9.2) / ((4.2-float64((33))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((33))))) * (((4.2-float64((33)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((33))))) - (((4.2-float64((33))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (34)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((34)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((34))))
		sum += ((45.2)+9.2) / ((4.2-float64((34))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((34))))) * (((4.2-float64((34)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((34))))) - (((4.2-float64((34))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (35)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((35)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((35))))
		sum += ((45.2)+9.2) / ((4.2-float64((35))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((35))))) * (((4.2-float64((35)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((35))))) - (((4.2-float64((35))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (36)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((36)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((36))))
		sum += ((45.2)+9.2) / ((4.2-float64((36))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((36))))) * (((4.2-float64((36)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((36))))) - (((4.2-float64((36))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (37)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((37)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((37))))
		sum += ((45.2)+9.2) / ((4.2-float64((37))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((37))))) * (((4.2-float64((37)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((37))))) - (((4.2-float64((37))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (38)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((38)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((38))))
		sum += ((45.2)+9.2) / ((4.2-float64((38))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((38))))) * (((4.2-float64((38)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((38))))) - (((4.2-float64((38))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (39)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((39)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((39))))
		sum += ((45.2)+9.2) / ((4.2-float64((39))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((39))))) * (((4.2-float64((39)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((39))))) - (((4.2-float64((39))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (40)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((40)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((40))))
		sum += ((45.2)+9.2) / ((4.2-float64((40))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((40))))) * (((4.2-float64((40)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((40))))) - (((4.2-float64((40))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (41)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((41)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((41))))
		sum += ((45.2)+9.2) / ((4.2-float64((41))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((41))))) * (((4.2-float64((41)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((41))))) - (((4.2-float64((41))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (42)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((42)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((42))))
		sum += ((45.2)+9.2) / ((4.2-float64((42))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((42))))) * (((4.2-float64((42)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((42))))) - (((4.2-float64((42))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (43)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((43)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((43))))
		sum += ((45.2)+9.2) / ((4.2-float64((43))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((43))))) * (((4.2-float64((43)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((43))))) - (((4.2-float64((43))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (44)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((44)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((44))))
		sum += ((45.2)+9.2) / ((4.2-float64((44))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((44))))) * (((4.2-float64((44)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((44))))) - (((4.2-float64((44))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (45)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((45)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((45))))
		sum += ((45.2)+9.2) / ((4.2-float64((45))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((45))))) * (((4.2-float64((45)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((45))))) - (((4.2-float64((45))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (46)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((46)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((46))))
		sum += ((45.2)+9.2) / ((4.2-float64((46))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((46))))) * (((4.2-float64((46)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((46))))) - (((4.2-float64((46))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (47)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((47)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((47))))
		sum += ((45.2)+9.2) / ((4.2-float64((47))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((47))))) * (((4.2-float64((47)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((47))))) - (((4.2-float64((47))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (48)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((48)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((48))))
		sum += ((45.2)+9.2) / ((4.2-float64((48))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((48))))) * (((4.2-float64((48)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((48))))) - (((4.2-float64((48))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} // Ensure subsitutions work in sub-blocks
		if (49)%2 == 0 {
			sum += (45.2)/2 + (4.2-float64((49)))/3
		sum += ((45.2)+9.2) + ((4.2-float64((49))))
		sum += ((45.2)+9.2) / ((4.2-float64((49))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((49))))) * (((4.2-float64((49)))))
		sum += (((45.2)+9.2)/3.2+((4.2-float64((49))))) - (((4.2-float64((49))))) // inlined inlineTest_(x/3.2+y, y) // inlined inlineTest2_((45.2)+9.2, (4.2-float64(i_))) // inlined inlineTest3_(45.2, 4.2-float64(i_))
		} /* } */ 
	return sum
}
